---
// Blog Card Component - Accessible and modern
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, pubDate, tags } = post.data;
const href = `/blog/${post.slug}/`;

// Format the date
const formattedDate = pubDate.toLocaleDateString("en-US", { 
  year: 'numeric', 
  month: 'long', 
  day: 'numeric' 
});
---

<article class="blog-card">
  <a href={href} class="blog-card-link" aria-describedby={`post-${post.slug}-desc`}>
    <header class="blog-card-header">
      <h2 class="blog-card-title">{title}</h2>
      <time datetime={pubDate.toISOString()} class="blog-card-date">
        {formattedDate}
      </time>
    </header>
    
    <div class="blog-card-content">
      <p id={`post-${post.slug}-desc`} class="blog-card-description">
        {description}
      </p>
      
      {tags && tags.length > 0 && (
        <div class="blog-card-tags" aria-label="Post tags">
          {tags.map((tag) => (
            <span class="blog-card-tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .blog-card {
    background: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    transition: all var(--transition-base);
    overflow: hidden;
    height: 100%;
  }
  
  .blog-card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
    border-color: var(--color-primary-300);
  }
  
  .blog-card:focus-within {
    box-shadow: var(--focus-ring-offset), var(--focus-ring);
  }
  
  .blog-card-link {
    display: block;
    padding: var(--space-6);
    text-decoration: none;
    color: inherit;
    height: 100%;
  }
  
  .blog-card-link:hover {
    text-decoration: none;
  }
  
  .blog-card-link:focus {
    outline: none;
  }
  
  .blog-card-header {
    margin-bottom: var(--space-4);
  }
  
  .blog-card-title {
    font-size: var(--font-size-xl);
    font-weight: 600;
    line-height: var(--line-height-tight);
    color: var(--color-foreground);
    margin: 0 0 var(--space-2) 0;
    transition: color var(--transition-fast);
  }
  
  .blog-card-link:hover .blog-card-title {
    color: var(--color-primary-600);
  }
  
  .blog-card-date {
    font-size: var(--font-size-sm);
    color: var(--color-muted-foreground);
    font-weight: 500;
  }
  
  .blog-card-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    height: 100%;
  }
  
  .blog-card-description {
    color: var(--color-muted-foreground);
    line-height: var(--line-height-relaxed);
    margin: 0;
    flex: 1;
  }
  
  .blog-card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    margin-top: auto;
  }
  
  .blog-card-tag {
    display: inline-block;
    padding: var(--space-1) var(--space-3);
    background: var(--color-muted);
    color: var(--color-muted-foreground);
    font-size: var(--font-size-xs);
    font-weight: 500;
    border-radius: var(--radius-full);
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }
  
  /* Ensure cards have consistent height in grid */
  .blog-card-link {
    display: flex;
    flex-direction: column;
  }
</style>