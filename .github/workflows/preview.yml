name: Create PR Preview Artifact

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node, yarn, and cache
        uses: ./.github/actions/setup-node-yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build site
        run: yarn build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: preview-site
          path: ./dist

  post-comment:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Post or Update PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment_body = `ðŸ“¦ Preview artifact is ready. Download it from the [summary of this Actions run](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}).`;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const existing_comment = comments.find(comment => comment.user.login === 'github-actions[bot]' && comment.body.startsWith('ðŸ“¦ Preview artifact is ready.'));
            if (existing_comment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing_comment.id,
                body: comment_body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment_body
              });
            }
